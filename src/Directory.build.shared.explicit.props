<Project>
  <!-- 
    This file applies to projects when it gets imported explicitly using the line below:

    <Import Project="$(MSBuildProjectDirectory)\..\Directory.build.shared.explicit.props" Condition="Exists('$(MSBuildProjectDirectory)\..\Directory.build.shared.explicit.props')" />
  -->

  <!-- Explicit additional project properties that require stuff set before -->
  <PropertyGroup>
    <!-- 
      Use MsBuildProjectName, this allows us to use the same assembly name for different
      versions, e.g.:
      
      Orc.EntityFramework5 => Orc.EntityFramework.dll
      Orc.EntityFramework6 => Orc.EntityFramework.dll
      
      If we would use AssemblyName, they would be compiled into the same directory
    -->
    <OverridableOutputPath>$(ProjectDir)..\..\output\$(Configuration)\$(MSBuildProjectName)\</OverridableOutputPath>
    <OutputPath>$(OverridableOutputPath)</OutputPath>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
  </PropertyGroup>
  
  <!-- 
    Fix for .NET Core 3.0, see https://github.com/dotnet/core-sdk/issues/192, it 
    uses obj/release instead of [outputdirectory] 
  -->
  <PropertyGroup Condition=" '$(DotNetPackIntermediateOutputPath)' != '' ">
    <IntermediateOutputPath>$(DotNetPackIntermediateOutputPath)</IntermediateOutputPath>
  </PropertyGroup>

  <!-- Workaround for pdb files for non-core platforms, see https://github.com/dotnet/sdk/issues/1458, 
       but don't apply to UWP apps, see https://github.com/GeertvanHorrik/UwpResourcesIssue -->
  <Choose>
    <When Condition="'$(TargetPlatformIdentifier)'!='UAP'">
      <!--<Target>
        <Message Importance="High" Text="Target platform identifier is '$(TargetPlatformIdentifier)', applying pdb fix" />
      </Target>-->
      <ItemGroup>
        <PackageReference Include="SourceLink.Copy.PdbFiles" Version="2.8.3" PrivateAssets="All" />
      </ItemGroup>
    </When>
    <Otherwise>
      <!--<Target>
        <Message Importance="High" Text="Target platform identifier is '$(TargetPlatformIdentifier)', not applying pdb fix" />
      </Target>-->
    </Otherwise>
  </Choose>
  
  <ItemGroup>
    <None Update="**\*.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
  </ItemGroup>

  <!-- Only required for MSBuild Sdk Extras < 2.x -->
  <!--<ItemGroup>
    <Page Include="**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" Exclude="App.xaml" />
    <Compile Update="**\*.xaml.cs" SubType="Designer" DependentUpon="%(Filename)" />
    <Compile Update="$(IntermediateOutputPath)**\*.g.cs" Visible="false" />
  </ItemGroup>

  <ItemGroup Condition="'$(OutputType)' == 'WinExe'">
    <ApplicationDefinition Include="App.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="App.xaml.cs" SubType="Designer" DependentUpon="%(Filename)" />
    <Compile Update="$(IntermediateOutputPath)**\App.g.cs" Visible="false" />
  </ItemGroup>-->
  
  <ItemGroup>
    <Compile Remove="Platforms\**\*.cs;Resources\**\*.cs" />
    <Page Remove="Platforms\**\*.xaml" />
    <!-- This is here so that the conditionally included files below are all visible in VS -->
    <None Include="Platforms\**\*.*;Resources\**\*.*" />
    <EmbeddedResource Include="Resources\Files\**\*.*" />
    <Resource Include="Resources\Fonts\**\*.ttf" />
    <Resource Include="Resources\Images\**\*.png" />
    <Resource Include="Resources\Images\**\*.gif" />
    <Resource Include="Resources\Images\**\*.jpg" />
    <Resource Include="Resources\Images\**\*.jpeg" />
    <EmbeddedResource Include="Resources\ThirdPartyNotices\**\*" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.*.resx">
      <Generator />
    </EmbeddedResource>

    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>

    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <!-- .NET Core app 2.1 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp2.1' ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE2_1;NETCOREAPP;NETCOREAPP2_1</DefineConstants>
  </PropertyGroup>
  
  <!-- .NET Core app 3.0 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.0' ">
    <DefineConstants>$(DefineConstants);NETCORE;NETCORE3_0;NETCOREAPP;NETCOREAPP3_0</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp3.0' ">
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- .NET Standard 2.0 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <DefineConstants>$(DefineConstants);NETSTANDARD;NETSTANDARD2_0;NS;NS20</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard2.0' ">
    <Compile Include="Platforms\netstandard2.0\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\netstandard2.0\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\netstandard2.0\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- .NET 4.5 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET45;NET450</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net451' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET45;NET451</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net452' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET45;NET452</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' OR '$(TargetFramework)' == 'net451' OR '$(TargetFramework)' == 'net452'">
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- .NET 4.6 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net46' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET46;NET460</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net461' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET46;NET461</DefineConstants>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net462' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>   
    <DefineConstants>$(DefineConstants);NET;NET46;NET462</DefineConstants>
  </PropertyGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net46' OR '$(TargetFramework)' == 'net461' OR '$(TargetFramework)' == 'net462'">
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- .NET 4.7 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net47' ">
    <EnableWpfProjectSetup>true</EnableWpfProjectSetup>
    <DefineConstants>$(DefineConstants);NET;NET47;NET470</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'net47' ">
    <Compile Include="Platforms\net\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\net\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\net\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
  <!-- UAP 10.0 -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'uap10.0' ">
    <EnableDefaultXamlItems>true</EnableDefaultXamlItems>
    <DefineConstants>$(DefineConstants);UAP;NETFX_CORE;UWP;WINDOWS_UWP</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'uap10.0' ">
    <Compile Include="Platforms\uap10.0\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\uap10.0\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\uap10.0\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- Xamarin.iOS -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'xamarin.ios10' ">
    <DefineConstants>$(DefineConstants);XAMARIN;IOS</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'xamarin.ios10' ">
    <Compile Include="Platforms\xamarin.ios\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\xamarin.ios\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\xamarin.ios\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>

  <!-- Xamarin.Android -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'monoandroid70' ">
    <DefineConstants>$(DefineConstants);XAMARIN;ANDROID</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup Condition=" '$(TargetFramework)' == 'monoandroid70' ">
    <Compile Include="Platforms\xamarin.android\**\*.cs" DependentUpon="%(Filename)" />
    <Page Include="Platforms\xamarin.android\**\*.xaml" SubType="Designer" Generator="MSBuild:Compile" />
    <Compile Update="Platforms\xamarin.ioandroid\**\*.xaml.cs" SubType="Code" DependentUpon="%(Filename)" />
  </ItemGroup>
  
</Project>
{"path":"api/CsvHelper.TypeConversion","templateID":1,"sharedPropsHashes":{"toc":"Z6psdd"},"localProps":{"className":"/CsvHelper.TypeConversion","data":"# CsvHelper.TypeConversion Namespace\r\n\r\n## Classes\r\n&nbsp; | &nbsp;\r\n- | -\r\n[ArrayConverter](/api/CsvHelper.TypeConversion/ArrayConverter) | Converts an ``System.Array`` to and from a ``System.String`` .\r\n[BooleanConverter](/api/CsvHelper.TypeConversion/BooleanConverter) | Converts a ``System.Boolean`` to and from a ``System.String`` .\r\n[ByteArrayConverter](/api/CsvHelper.TypeConversion/ByteArrayConverter) | Converts a ``Byte[]`` to and from a ``System.String`` .\r\n[ByteConverter](/api/CsvHelper.TypeConversion/ByteConverter) | Converts a ``System.Byte`` to and from a ``System.String`` .\r\n[CharConverter](/api/CsvHelper.TypeConversion/CharConverter) | Converts a ``System.Char`` to and from a ``System.String`` .\r\n[CollectionGenericConverter](/api/CsvHelper.TypeConversion/CollectionGenericConverter) | Converts a ``System.Collections.ObjectModel.Collection<T>`` to and from a ``System.String`` .\r\n[DateTimeConverter](/api/CsvHelper.TypeConversion/DateTimeConverter) | Converts a ``System.DateTime`` to and from a ``System.String`` .\r\n[DateTimeOffsetConverter](/api/CsvHelper.TypeConversion/DateTimeOffsetConverter) | Converts a ``System.DateTimeOffset`` to and from a ``System.String`` .\r\n[DecimalConverter](/api/CsvHelper.TypeConversion/DecimalConverter) | Converts a ``System.Decimal`` to and from a ``System.String`` .\r\n[DefaultTypeConverter](/api/CsvHelper.TypeConversion/DefaultTypeConverter) | Converts an ``System.Object`` to and from a ``System.String`` .\r\n[DoubleConverter](/api/CsvHelper.TypeConversion/DoubleConverter) | Converts a ``System.Double`` to and from a ``System.String`` .\r\n[EnumConverter](/api/CsvHelper.TypeConversion/EnumConverter) | Converts an ``System.Enum`` to and from a ``System.String`` .\r\n[EnumerableConverter](/api/CsvHelper.TypeConversion/EnumerableConverter) | Throws an exception when used. This is here so that it's apparent that there is no support for ``System.Collections.IEnumerable`` type coversion. A custom converter will need to be created to have a field convert to and from an IEnumerable.\r\n[GuidConverter](/api/CsvHelper.TypeConversion/GuidConverter) | Converts a ``System.Guid`` to and from a ``System.String`` .\r\n[IDictionaryConverter](/api/CsvHelper.TypeConversion/IDictionaryConverter) | Converts an ``System.Collections.IDictionary`` to and from a ``System.String`` .\r\n[IDictionaryGenericConverter](/api/CsvHelper.TypeConversion/IDictionaryGenericConverter) | Converts an ``System.Collections.Generic.IDictionary<TKey, TValue>`` to and from a ``System.String`` .\r\n[IEnumerableConverter](/api/CsvHelper.TypeConversion/IEnumerableConverter) | Converts an ``System.Collections.IEnumerable`` to and from a ``System.String`` .\r\n[IEnumerableGenericConverter](/api/CsvHelper.TypeConversion/IEnumerableGenericConverter) | Converts an ``System.Collections.Generic.IEnumerable<T>`` to and from a ``System.String`` .\r\n[Int16Converter](/api/CsvHelper.TypeConversion/Int16Converter) | Converts a ``System.Int16`` to and from a ``System.String`` .\r\n[Int32Converter](/api/CsvHelper.TypeConversion/Int32Converter) | Converts an ``System.Int32`` to and from a ``System.String`` .\r\n[Int64Converter](/api/CsvHelper.TypeConversion/Int64Converter) | Converts an ``System.Int64`` to and from a ``System.String`` .\r\n[NullableConverter](/api/CsvHelper.TypeConversion/NullableConverter) | Converts a ``System.Nullable<T>`` to and from a ``System.String`` .\r\n[SByteConverter](/api/CsvHelper.TypeConversion/SByteConverter) | Converts a ``System.SByte`` to and from a ``System.String`` .\r\n[SingleConverter](/api/CsvHelper.TypeConversion/SingleConverter) | Converts a ``System.Single`` to and from a ``System.String`` .\r\n[StringConverter](/api/CsvHelper.TypeConversion/StringConverter) | Converts a ``System.String`` to and from a ``System.String`` .\r\n[TimeSpanConverter](/api/CsvHelper.TypeConversion/TimeSpanConverter) | Converts a ``System.TimeSpan`` to and from a ``System.String`` .\r\n[TypeConverterCache](/api/CsvHelper.TypeConversion/TypeConverterCache) | Caches ``CsvHelper.TypeConversion.ITypeConverter`` s for a given type.\r\n[TypeConverterException](/api/CsvHelper.TypeConversion/TypeConverterException) | Represents errors that occur while reading a CSV file.\r\n[TypeConverterOptions](/api/CsvHelper.TypeConversion/TypeConverterOptions) | Options used when doing type conversion.\r\n[TypeConverterOptionsCache](/api/CsvHelper.TypeConversion/TypeConverterOptionsCache) | Caches ``CsvHelper.TypeConversion.TypeConverterOptions`` for a given type.\r\n[UInt16Converter](/api/CsvHelper.TypeConversion/UInt16Converter) | Converts a ``System.UInt16`` to and from a ``System.String`` .\r\n[UInt32Converter](/api/CsvHelper.TypeConversion/UInt32Converter) | Converts a ``System.UInt32`` to and from a ``System.String`` .\r\n[UInt64Converter](/api/CsvHelper.TypeConversion/UInt64Converter) | Converts a ``System.UInt64`` to and from a ``System.String`` .\r\n\r\n## Interfaces\r\n&nbsp; | &nbsp;\r\n- | -\r\n[ITypeConverter](/api/CsvHelper.TypeConversion/ITypeConverter) | Converts objects to and from strings.\r\n\r\n## Enums\r\n&nbsp; | &nbsp;\r\n- | -\r\n[ByteArrayConverterOptions](/api/CsvHelper.TypeConversion/ByteArrayConverterOptions) | Options for converting byte arrays.\r\n"}}

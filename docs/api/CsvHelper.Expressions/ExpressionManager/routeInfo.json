{"path":"api/CsvHelper.Expressions/ExpressionManager","templateID":1,"sharedPropsHashes":{"toc":"Z6psdd"},"localProps":{"className":"/ExpressionManager","data":"# ExpressionManager Class\r\n\r\nNamespace: [CsvHelper.Expressions](/api/CsvHelper.Expressions)\r\n\r\nManages expression creation.\r\n\r\n```cs\r\npublic class ExpressionManager \r\n```\r\n\r\nInheritance Object -> ExpressionManager\r\n\r\n## Constructors\r\n&nbsp; | &nbsp;\r\n- | -\r\nExpressionManager(CsvReader) | Initializes a new instance using the given reader.\r\nExpressionManager(CsvWriter) | Initializes a new instance using the given writer.\r\n\r\n## Methods\r\n&nbsp; | &nbsp;\r\n- | -\r\nCreateConstructorArgumentExpressionsForMapping(ClassMap, List&lt;Expression&gt;) | Creates the constructor arguments used to create a type.\r\nCreateGetFieldExpression(MemberMap) | Creates an expression the represents getting the field for the given member and converting it to the member's type.\r\nCreateGetMemberExpression(Expression, ClassMap, MemberMap) | Creates a member expression for the given member on the record. This will recursively traverse the mapping to find the member and create a safe member accessor for each level as it goes.\r\nCreateInstanceAndAssignMembers(Type, List&lt;MemberAssignment&gt;) | Creates an instance of the given type using ``CsvHelper.ReflectionHelper.CreateInstance(System.Type,System.Object[])`` (in turn using the ObjectResolver), then assigns the given member assignments to that instance.\r\nCreateMemberAssignmentsForMapping(ClassMap, List&lt;MemberAssignment&gt;) | Creates the member assignments for the given ``CsvHelper.Configuration.ClassMap`` .\r\n"}}

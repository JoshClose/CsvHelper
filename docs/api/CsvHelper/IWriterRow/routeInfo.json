{"path":"api/CsvHelper/IWriterRow","templateID":1,"sharedPropsHashes":{"toc":"Z6psdd"},"localProps":{"className":"/IWriterRow","data":"# IWriterRow Interface\r\n\r\nNamespace: [CsvHelper](/api/CsvHelper)\r\n\r\nDefines methods used to write a CSV row.\r\n\r\n```cs\r\npublic interface IWriterRow \r\n```\r\n\r\n## Properties\r\n&nbsp; | &nbsp;\r\n- | -\r\nConfiguration | Gets or sets the configuration.\r\nContext | Gets the writing context.\r\n\r\n## Methods\r\n&nbsp; | &nbsp;\r\n- | -\r\nWriteComment(String) | Writes a comment.\r\nWriteConvertedField(String) | Writes a field that has already been converted to a ``System.String`` from an ``CsvHelper.TypeConversion.ITypeConverter`` . If the field is null, it won't get written. A type converter will always return a string, even if field is null. If the converter returns a null, it means that the converter has already written data, and the returned value should not be written.\r\nWriteField(String) | Writes the field to the CSV file. The field may get quotes added to it. When all fields are written for a record, ``CsvHelper.IWriter.NextRecord`` must be called to complete writing of the current record.\r\nWriteField(String, Boolean) | Writes the field to the CSV file. This will ignore any need to quote and ignore ``CsvHelper.Configuration.Configuration.ShouldQuote`` and just quote based on the shouldQuote parameter. When all fields are written for a record, ``CsvHelper.IWriter.NextRecord`` must be called to complete writing of the current record.\r\nWriteField&lt;T&gt;(T) | Writes the field to the CSV file. When all fields are written for a record, ``CsvHelper.IWriter.NextRecord`` must be called to complete writing of the current record.\r\nWriteField&lt;T&gt;(T, ITypeConverter) | Writes the field to the CSV file. When all fields are written for a record, ``CsvHelper.IWriter.NextRecord`` must be called to complete writing of the current record.\r\nWriteField&lt;T, TConverter&gt;(T) | Writes the field to the CSV file using the given ``CsvHelper.TypeConversion.ITypeConverter`` . When all fields are written for a record, ``CsvHelper.IWriter.NextRecord`` must be called to complete writing of the current record.\r\nWriteHeader&lt;T&gt;() | Writes the header record from the given members.\r\nWriteHeader(Type) | Writes the header record from the given members.\r\nWriteRecord&lt;T&gt;(T) | Writes the record to the CSV file.\r\n"}}

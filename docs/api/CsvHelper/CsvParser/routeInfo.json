{"path":"api/CsvHelper/CsvParser","templateID":1,"sharedPropsHashes":{"toc":"Z6psdd"},"localProps":{"className":"/CsvParser","data":"# CsvParser Class\r\n\r\nNamespace: [CsvHelper](/api/CsvHelper)\r\n\r\nParses a CSV file.\r\n\r\n```cs\r\npublic class CsvParser : IParser, IDisposable\r\n```\r\n\r\nInheritance Object -> CsvParser\r\n\r\n## Constructors\r\n&nbsp; | &nbsp;\r\n- | -\r\nCsvParser(TextReader) | Creates a new parser using the given ``System.IO.TextReader`` .\r\nCsvParser(IFieldReader) | Creates a new parser using the given ``CsvHelper.CsvParser.FieldReader`` .\r\nCsvParser(TextReader, Boolean) | Creates a new parser using the given ``System.IO.TextReader`` .\r\nCsvParser(TextReader, Configuration) | Creates a new parser using the given ``System.IO.TextReader`` and ``CsvHelper.CsvParser.Configuration`` .\r\nCsvParser(TextReader, Configuration, Boolean) | Creates a new parser using the given ``System.IO.TextReader`` and ``CsvHelper.CsvParser.Configuration`` .\r\n\r\n## Properties\r\n&nbsp; | &nbsp;\r\n- | -\r\nConfiguration | Gets the configuration.\r\nContext | Gets the reading context.\r\nFieldReader | Gets the ``CsvHelper.CsvParser.FieldReader`` .\r\n\r\n## Methods\r\n&nbsp; | &nbsp;\r\n- | -\r\nDispose() | Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\r\nRead() | Reads a record from the CSV file.\r\nReadAsync() | Reads a record from the CSV file asynchronously.\r\n"}}

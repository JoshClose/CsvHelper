{"path":"api/CsvHelper/CsvFieldReader","templateID":1,"sharedPropsHashes":{"toc":"Z6psdd"},"localProps":{"className":"/CsvFieldReader","data":"# CsvFieldReader Class\r\n\r\nNamespace: [CsvHelper](/api/CsvHelper)\r\n\r\nReads fields from a ``System.IO.TextReader`` .\r\n\r\n```cs\r\npublic class CsvFieldReader : IFieldReader, IDisposable\r\n```\r\n\r\nInheritance Object -> CsvFieldReader\r\n\r\n## Constructors\r\n&nbsp; | &nbsp;\r\n- | -\r\nCsvFieldReader(TextReader, Configuration) | Creates a new ``CsvHelper.CsvFieldReader`` using the given ``System.IO.TextReader`` and ``CsvHelper.Configuration.Configuration`` .\r\nCsvFieldReader(TextReader, Configuration, Boolean) | Creates a new ``CsvHelper.CsvFieldReader`` using the given ``System.IO.TextReader`` , ``CsvHelper.Configuration.Configuration`` and leaveOpen flag.\r\n\r\n## Properties\r\n&nbsp; | &nbsp;\r\n- | -\r\nContext | Gets the reading context.\r\nIsBufferEmpty | Gets a value indicating if the buffer is empty. True if the buffer is empty, otherwise false.\r\n\r\n## Methods\r\n&nbsp; | &nbsp;\r\n- | -\r\nAppendField() | Appends the current reading progress.\r\nDispose() | Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\r\nFillBuffer() | Fills the buffer.\r\nFillBufferAsync() | Fills the buffer.\r\nGetChar() | Gets the next char as an ``System.Int32`` .\r\nGetField() | Gets the field. This will append any reading progress.\r\nSetBufferPosition(Int32) | Move's the buffer position according to the given offset.\r\nSetFieldEnd(Int32) | Sets the end of the field to the current buffer position.\r\nSetFieldStart(Int32) | Sets the start of the field to the current buffer position.\r\nSetRawRecordEnd(Int32) | Sets the raw record end to the current buffer position.\r\nSetRawRecordStart(Int32) | Sets the raw recodr start to the current buffer position;\r\n"}}

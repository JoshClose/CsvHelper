{"path":"api/CsvHelper/CsvDataReader","templateID":1,"sharedPropsHashes":{"toc":"Z6psdd"},"localProps":{"className":"/CsvDataReader","data":"# CsvDataReader Class\r\n\r\nNamespace: [CsvHelper](/api/CsvHelper)\r\n\r\nProvides a means of reading a CSV file forward-only by using CsvReader.\r\n\r\n```cs\r\n[System.Reflection.DefaultMemberAttribute]\r\npublic class CsvDataReader : IDataReader, IDisposable, IDataRecord\r\n```\r\n\r\nInheritance Object -> CsvDataReader\r\n\r\n## Constructors\r\n&nbsp; | &nbsp;\r\n- | -\r\nCsvDataReader(CsvReader) | Initializes a new instance of the ``CsvHelper.CsvDataReader`` class.\r\n\r\n## Properties\r\n&nbsp; | &nbsp;\r\n- | -\r\nDepth | Gets a value indicating the depth of nesting for the current row.\r\nFieldCount | Gets the number of columns in the current row.\r\nIsClosed | Gets a value indicating whether the data reader is closed.\r\nthis[Int32] | Gets the column with the specified index.\r\nthis[String] | Gets the column with the specified name.\r\nRecordsAffected | Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.\r\n\r\n## Methods\r\n&nbsp; | &nbsp;\r\n- | -\r\nClose() | Closes the ``System.Data.IDataReader`` Object.\r\nDispose() | Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.\r\nGetBoolean(Int32) | Gets the value of the specified column as a Boolean.\r\nGetByte(Int32) | Gets the 8-bit unsigned integer value of the specified column.\r\nGetBytes(Int32, Int64, Byte[], Int32, Int32) | Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.\r\nGetChar(Int32) | Gets the character value of the specified column.\r\nGetChars(Int32, Int64, Char[], Int32, Int32) | Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.\r\nGetData(Int32) | Returns an ``System.Data.IDataReader`` for the specified column ordinal.\r\nGetDataTypeName(Int32) | Gets the data type information for the specified field.\r\nGetDateTime(Int32) | Gets the date and time data value of the specified field.\r\nGetDecimal(Int32) | Gets the fixed-position numeric value of the specified field.\r\nGetDouble(Int32) | Gets the double-precision floating point number of the specified field.\r\nGetFieldType(Int32) | Gets the ``System.Type`` information corresponding to the type of ``System.Object`` that would be returned from ``System.Data.IDataRecord.GetValue(System.Int32)`` .\r\nGetFloat(Int32) | Gets the single-precision floating point number of the specified field.\r\nGetGuid(Int32) | Returns the GUID value of the specified field.\r\nGetInt16(Int32) | Gets the 16-bit signed integer value of the specified field.\r\nGetInt32(Int32) | Gets the 32-bit signed integer value of the specified field.\r\nGetInt64(Int32) | Gets the 64-bit signed integer value of the specified field.\r\nGetName(Int32) | Gets the name for the field to find.\r\nGetOrdinal(String) | Return the index of the named field.\r\nGetSchemaTable() | Returns a ``System.Data.DataTable`` that describes the column metadata of the ``System.Data.IDataReader`` .\r\nGetString(Int32) | Gets the string value of the specified field.\r\nGetValue(Int32) | Return the value of the specified field.\r\nGetValues(Object[]) | Populates an array of objects with the column values of the current record.\r\nIsDBNull(Int32) | Return whether the specified field is set to null.\r\nNextResult() | Advances the data reader to the next result, when reading the results of batch SQL statements.\r\nRead() | Advances the ``System.Data.IDataReader`` to the next record.\r\n"}}

{"path":"examples/configuration/class-maps/type-conversion","templateID":1,"sharedPropsHashes":{"toc":"Z21KXCh"},"localProps":{"className":"/type-conversion","data":"# Type Conversion\r\n\r\nIf you need to convert to or from a non-standard .NET type, you can supply a type converter to use for a property.\r\n\r\n###### Data\r\n\r\n```\r\nId,Name,Json\r\n1,one,\"{ \"\"Foo\"\": \"\"Bar\"\" }\"\r\n```\r\n\r\n###### Example\r\n\r\n```cs\r\nvoid Main()\r\n{\r\n\tusing (var reader = new StreamReader(\"path\\\\to\\\\file.csv\"))\r\n\tusing (var csv = new CsvReader(reader))\r\n\t{\r\n\t\tcsv.Configuration.RegisterClassMap<FooMap>();\r\n\t\tcsv.GetRecords<Foo>().ToList().Dump();\r\n\t}\r\n}\r\n\r\npublic class Foo\r\n{\r\n\tpublic int Id { get; set; }\r\n\tpublic string Name { get; set; }\r\n\tpublic Json Json { get; set; }\r\n}\r\n\r\npublic class Json\r\n{\r\n\tpublic string Foo { get; set; }\r\n}\r\n\r\npublic class JsonConverter<T> : DefaultTypeConverter\r\n{\r\n\tpublic override object ConvertFromString(string text, IReaderRow row, MemberMapData memberMapData)\r\n\t{\r\n\t\treturn JsonConvert.DeserializeObject<T>(text);\r\n\t}\r\n\r\n\tpublic override string ConvertToString(object value, IWriterRow row, MemberMapData memberMapData)\r\n\t{\r\n\t\treturn JsonConvert.SerializeObject(value);\r\n\t}\r\n}\r\n\r\npublic class FooMap : ClassMap<Foo>\r\n{\r\n\tpublic FooMap()\r\n\t{\r\n\t\tMap(m => m.Id);\r\n\t\tMap(m => m.Name);\r\n\t\tMap(m => m.Json).TypeConverter<JsonConverter<Json>>();\r\n\t}\r\n}\r\n```\r\n"}}

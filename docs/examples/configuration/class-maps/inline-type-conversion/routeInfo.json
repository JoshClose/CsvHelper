{"path":"examples/configuration/class-maps/inline-type-conversion","templateID":1,"sharedPropsHashes":{"toc":"Z21KXCh"},"localProps":{"className":"/inline-type-conversion","data":"# Inline Type Conversion\r\n\r\nIf you don't want to write a full `ITypeConverter` implementation, you can specify a function that will do the same thing.\r\n\r\n## Reading\r\n\r\n###### Data\r\n\r\n```\r\nId,Name,Json\r\n1,one,\"{ \"\"Foo\"\": \"\"Bar\"\" }\"\r\n```\r\n\r\n###### Example\r\n\r\n```cs\r\nvoid Main()\r\n{\r\n    using (var reader = new StreamReader(\"path\\\\to\\\\file.csv\"))\r\n    using (var csv = new CsvReader(reader))\r\n    {\r\n        csv.Configuration.RegisterClassMap<FooMap>();\r\n        csv.GetRecords<Foo>().ToList().Dump();\r\n    }\r\n}\r\n\r\npublic class Foo\r\n{\r\n    public int Id { get; set; }\r\n    public string Name { get; set; }\r\n    public Json Json { get; set; }\r\n}\r\n\r\npublic class Json\r\n{\r\n    public string Foo { get; set; }\r\n}\r\n\r\npublic class FooMap : ClassMap<Foo>\r\n{\r\n    public FooMap()\r\n    {\r\n        Map(m => m.Id);\r\n        Map(m => m.Name);\r\n        Map(m => m.Json).ConvertUsing(row => JsonConvert.DeserializeObject<Json>(row.GetField(\"Json\")));\r\n    }\r\n}\r\n```\r\n\r\n## Writing\r\n\r\n###### Example\r\n\r\n```cs\r\nvoid Main()\r\n{\r\n\tvar records = new List<Foo>\r\n\t{\r\n\t\tnew Foo { Id = 1, Name = \"one\" }\r\n\t};\r\n\t\r\n\tusing (var writer = new StreamWriter(\"path\\\\to\\\\file.csv\"))\r\n\tusing (var csv = new CsvWriter(writer))\r\n\t{\r\n\t\tcsv.Configuration.RegisterClassMap<FooMap>();\r\n\t\tcsv.WriteRecords(records);\r\n\t\t\r\n\t\twriter.ToString().Dump();\r\n\t}\r\n}\r\n\r\npublic class Foo\r\n{\r\n\tpublic int Id { get; set; }\r\n\tpublic string Name { get; set; }\r\n\tpublic Json Json { get; set; }\r\n}\r\n\r\npublic class Json\r\n{\r\n\tpublic string Foo { get; set; }\r\n}\r\n\r\npublic class FooMap : ClassMap<Foo>\r\n{\r\n\tpublic FooMap()\r\n\t{\r\n\t\tMap(m => m.Id);\r\n\t\tMap(m => m.Name);\r\n\t\tMap(m => m.Json).ConvertUsing(o => JsonConvert.SerializeObject(o));\r\n\t}\r\n}\r\n```\r\n\r\n###### Output\r\n\r\n```\r\nId,Name,Json\r\n1,one,\"{\"\"Id\"\":1,\"\"Name\"\":\"\"one\"\",\"\"Json\"\":null}\"\r\n```\r\n"}}

{"path":"examples/prerequisites/streams","templateID":1,"sharedPropsHashes":{"toc":"Z21KXCh"},"localProps":{"className":"/streams","data":"# Streams\r\n\r\nWhen reading from a stream, if you need to go back to the beginning of the stream, you can use the `Stream.Position` property.\r\n\r\n```cs\r\nusing (var stream = new File.OpenRead(\"path\\\\to\\\\file\"))\r\nusing (var reader = new StreamReader(stream))\r\n{\t\r\n\t// Read file content.\r\n\tvar content = reader.ReadToEnd();\r\n\r\n\t// Go back to beginning of the stream.\r\n\tstream.Position = 0;\r\n\r\n\t// Read file content again.\r\n\tcontent = reader.ReadToEnd();\r\n}\r\n```\r\n\r\nWhen writing to a file, you need to flush the writer for the data to be written to the stream. `StreamWriter` contains an internal buffer and the data is only written to the stream when the buffer is full, or `Flush` is called. `Flush` is automatically called when a `using` block exits.\r\n\r\n```cs\r\nusing (var stream = new File.OpenWrite(\"path\\\\to\\\\file\"))\r\nusing (var writer = new StreamWriter(stream))\r\n{\t\r\n\twriter.WriteLine(\"Foo\");\r\n\twriter.Flush(); // Data is written from the writer buffer to the stream.\r\n} // Flush is also called here.\r\n```\r\n"}}

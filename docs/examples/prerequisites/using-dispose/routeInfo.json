{"path":"examples/prerequisites/using-dispose","templateID":1,"sharedPropsHashes":{"toc":"Z21KXCh"},"localProps":{"className":"/using-dispose","data":"# Using and Dispose\r\n\r\nWhenever you have an object the implements `IDisposable`, you need to dispose of the resource when you're done with it. Most classes that use unmanaged resources will implement `IDisposable`. This means a lot of classes in the `System.IO` namespace will need to be disposed of.\r\n\r\nThe best practice to dispose of an object when you're done with it is to wrap the code in a `using` block. When the `using` block exits, the resource will automatically be disposed of as soon as possible.\r\n\r\n```cs\r\nusing (var stream = new MemoryStream())\r\n{\r\n\t// Use the stream.\r\n}\r\n// The stream will be disposed of as soon as possible.\r\n```\r\n\r\nIf you need to keep keep it around for a while and dispose of it later, `using` does some error handling for you, so it's still a good idea to use it instead of calling `Dispose` directly. There is some debate on whether this is a good idea because it doesn't show intent.\r\n\r\n```cs\r\nvar stream = new MemoryStream();\r\n// Later in a different part of your code.\r\nusing (stream) { }\r\n```\r\n"}}
